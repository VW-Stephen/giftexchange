// <auto-generated />
using giftexchange.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using System;

namespace giftexchange.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20170925234229_InverseRelationships")]
    partial class InverseRelationships
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.0-rtm-26452")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("giftexchange.Models.GiftExchange", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Description");

                    b.Property<float>("MaxPurchasePrice");

                    b.Property<string>("Name");

                    b.HasKey("ID");

                    b.ToTable("GiftExchanges");
                });

            modelBuilder.Entity("giftexchange.Models.Participant", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Email");

                    b.Property<int?>("GiftAssignmentId");

                    b.Property<int>("GiftExchangeId");

                    b.Property<string>("Name");

                    b.HasKey("ID");

                    b.HasIndex("GiftAssignmentId");

                    b.HasIndex("GiftExchangeId");

                    b.ToTable("Participants");
                });

            modelBuilder.Entity("giftexchange.Models.Participant", b =>
                {
                    b.HasOne("giftexchange.Models.Participant", "GiftAssignment")
                        .WithMany()
                        .HasForeignKey("GiftAssignmentId");

                    b.HasOne("giftexchange.Models.GiftExchange", "GiftExchange")
                        .WithMany()
                        .HasForeignKey("GiftExchangeId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
